#!/usr/bin/env python
PACKAGE = "lidar_filters_pkg"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#Parameter lista.
#Fixed frame.
gen.add("fixedFrame", str_t, 0, "Fixed frame. (A program ujrainditas szukseges, ha valtoztatod.)", "left_os1/os1_lidar")

#A topic, amire felszeretnenk iratkozni.
gen.add("topicName", str_t, 0, "A topic, amire fel szeretnel iratkozni. (A program ujrainditas szukseges, ha valtoztatod.)", "/left_os1/os1_cloud_node/points")

#Modszerek engedelyezese.
gen.add("x_zero_method", bool_t, 0, "Padka felismero modszer (1).", True)
gen.add("y_zero_method", bool_t, 0, "Padka felismero modszer (2).", True)
gen.add("star_shaped_method", bool_t, 0, "Padka felismero modszer (3). - Csaplar Laszlo", True)
gen.add("blind_spots", bool_t, 0, "Vakfoltok szurese.", True)

#Vakfolt (+-,+,-) X iranyu vizsgalata.
size_enum = gen.enum([gen.const("bothX", int_t, 0, "+-X iranyu vizsgalat."),
                    gen.const("positiveX", int_t, 1, "+X iranyu vizsgalat."),
                    gen.const("negativeX", int_t, 2, "-X iranyu vizsgalat.")],
                    "Vakfolt (+-,+,-) X iranyu vizsgalata.")
gen.add("xDirection", int_t, 0, "Vakfolt (+-,+,-) X iranyu vizsgalata.", 0, 0, 2, edit_method=size_enum)

#A LIDAR vertikalis szogfelbontassanak, elfogadott intervalluma.
gen.add("interval", double_t, 0, "A LIDAR vertikalis szogfelbontasanak, elfogadott intervalluma. Csak akkor allitsd el, ha hibat tapasztalsz!!!", 0.1800, 0.0100, 10)

#Becsult, minimalis szegely magassag.
gen.add("curbHeight", double_t, 0, "A szegely, becsult, minimum magassaga.", 0.0500, 0.0100, 0.5000)

#A pontok becsult szama, a szegelyen.
gen.add("curbPoints", int_t, 0, "A pontok becsult szama, a szegelyen.", 5, 1, 30)

#A vizsgalt sugarzona.
gen.add("beamZone", double_t, 0, "A sugar zona szelessege.", 30, 10, 100)

#X = 0 ertek mellett, harom pont altal bezart szog.
gen.add("angleFilter1", double_t, 0, "A vizsgalt haromszog (harom pont), altal bezart szog. - x_zero_method", 150, 0, 180)

#Z = 0 ertek mellett, ket vektor altal bezart szog.
gen.add("angleFilter2", double_t, 0, "A vizsgalt haromszog (ket vektor), altal bezart szog. - y_zero_method", 140, 0, 180)

#Csaplar Laszlo kodjahoz szukseges. Sugar iranyu szog hatarertek (fokban).
gen.add("angleFilter3", double_t, 0, "Sugar iranyu hatarertek (fokban). - star_shaped_method", 50, 0, 180)

#Minimum X - Maximum X
gen.add("min_X", double_t, 0, "A vizsgalt terulet merete: Minimum X.", 0, -200, 200)
gen.add("max_X", double_t, 0, "A vizsgalt terulet merete: Maximum X.", 30, -200, 200)

#Minimum Y - Maximum Y
gen.add("min_Y", double_t, 0, "A vizsgalt terulet merete: Minimum Y.", -10, -200, 200)
gen.add("max_Y", double_t, 0, "A vizsgalt terulet merete: Maximum Y.", 10, -200, 200)

#Minimum Z - Maximum Z
gen.add("min_Z", double_t, 0, "A vizsgalt terulet merete: Minimum Z.", -3, -200, 200)
gen.add("max_Z", double_t, 0, "A vizsgalt terulet merete: Maximum Z.", -1, -200, 200)

#Min. pontok szorasahoz. - CSP
gen.add("dmin_param", int_t, 0, "Min. pontok szorasahoz. - Csaplar Laszlo", 10, 3, 30)

#Szoras - Egyutthato. - CSP
gen.add("kdev_param", double_t, 0, "Szoras - Egyutthato. - Csaplar Laszlo", 1.225, 0.5, 5)

#Tavolsag - Egyutthato. - CSP
gen.add("kdist_param", double_t, 0, "Tavolsag - Egyutthato. - Csaplar Laszlo", 2, 0.4, 10)

exit(gen.generate(PACKAGE, "lidar_filters_pkg", "MyParams"))